"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _element = require("@wordpress/element");
var _htmlReactParser = _interopRequireDefault(require("html-react-parser"));
var _mergeTag = _interopRequireDefault(require("../merge-tag"));
/**
 * WordPress Dependencies
 */
// import { autop } from '@wordpress/autop';

/**
 * External Dependencies
 */

/**
 * Internal Dependencies
 */

const HtmlParser = _ref => {
  let {
    value
  } = _ref;
  if (!value) return null;
  value = value.replace(/{{([a-zA-Z0-9-_]+):([a-zA-Z0-9-_]+)}}/g, (_match, p1, p2) => {
    return `<mergetag type='${p1}' modifier='${p2}'></mergetag>`;
  });
  value = '<p>' + value.replaceAll('\n\n', '<br />') + '</p>';
  const res = (0, _element.createElement)(_element.Fragment, null, (0, _htmlReactParser.default)(value, {
    replace: domNode => {
      if (
      // @ts-expect-error
      domNode?.name === 'mergetag') {
        // @ts-expect-error
        const {
          modifier,
          type
        } = domNode.attribs;
        return (0, _element.createElement)(_mergeTag.default, {
          type: type,
          modifier: modifier
        });
      }
    }
  }));
  return (0, _element.createElement)("div", {
    className: "renderer-core-html-parser"
  }, res, " ");
};
var _default = HtmlParser;
exports.default = _default;
//# sourceMappingURL=index.js.map