"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _element = require("@wordpress/element");
var _utils = require("@quillforms/utils");
var _useGeneralTheme = _interopRequireDefault(require("../../../hooks/use-general-theme"));
var _emotion = require("emotion");
var _classnames = _interopRequireDefault(require("classnames"));
var _tinycolor = _interopRequireDefault(require("tinycolor2"));
/**
 * QuillForms Dependencies
 */

/**
 * External Dependencies
 */

const Info = _ref => {
  var _data$payments$labels, _data$payments$labels2;
  let {
    data
  } = _ref;
  const generalTheme = (0, _useGeneralTheme.default)();
  const questionsColor = (0, _tinycolor.default)(generalTheme.questionsColor);
  const cs = data.payments.currency.symbol;
  const csp = data.payments.currency.symbol_pos;
  return (0, _element.createElement)("div", {
    className: "renderer-core-payment-modal-info"
  }, (0, _element.createElement)("div", {
    className: (0, _classnames.default)('renderer-core-payment-modal-info__heading', (0, _emotion.css)`
						font-size: 22px;
						text-transform: uppercase;
						background: ${generalTheme.buttonsBgColor};
						padding: 15px;
						color: ${generalTheme.buttonsFontColor};
						border-top-right-radius: 8px;
						border-top-left-radius: 8px;
					`)
  }, (_data$payments$labels = data.payments.labels?.order_details_heading) !== null && _data$payments$labels !== void 0 ? _data$payments$labels : 'Your Order'), data.payments.products.items.map((item, index) => {
    return (0, _element.createElement)("div", {
      key: index,
      className: (0, _classnames.default)('renderer-core-payment-order__item-row', (0, _emotion.css)`
								color: ${generalTheme.questionsColor};
								border-bottom: 1px solid;
								border-color: ${questionsColor.setAlpha(0.3).toString()};
							`)
    }, (0, _element.createElement)("div", {
      className: "renderer-core-payment-order__item-name"
    }, item.name), (0, _element.createElement)("div", {
      className: "renderer-core-payment-order__item-price"
    }, (0, _utils.formatMoney)(item.price, cs, csp), ' '));
  }), (0, _element.createElement)("div", {
    className: (0, _classnames.default)('renderer-core-payment-modal-info_footer', (0, _emotion.css)`
						color: ${generalTheme.questionsColor};
						font-weight: bold;
					`)
  }, (0, _element.createElement)("div", null, (_data$payments$labels2 = data.payments.labels?.order_total) !== null && _data$payments$labels2 !== void 0 ? _data$payments$labels2 : 'Total', " "), (0, _element.createElement)("div", null, (0, _utils.formatMoney)(data.payments.products.total, cs, csp), ' ', data.payments.recurring && ` /${data.payments.recurring.interval_count} ${data.payments.recurring.interval_unit}/s`)));
};
var _default = Info;
exports.default = _default;
//# sourceMappingURL=index.js.map