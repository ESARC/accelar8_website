{"version":3,"names":["_constants","require","setSwiper","swiperState","type","SET_SWIPER_STATE","exports","goNext","isSwiping","arguments","length","undefined","GO_NEXT","goPrev","GO_PREV","goToBlock","id","forceUpdateState","GO_TO_BLOCK","completeForm","COMPLETE_FORM","resetAnswers","RESET_ANSWERS","insertEmptyFieldAnswer","blockName","INSERT_EMPTY_FIELD_ANSWER","setFieldAnswer","val","SET_FIELD_ANSWER","setIsFieldValid","SET_IS_FIELD_VALID","setIsFieldAnswered","SET_IS_FIELD_ANSWERED","setIsFieldPending","SET_IS_FIELD_PENDING","setFieldPendingMsg","SET_FIELD_PENDING_MSG","setFieldValidationErr","SET_FIELD_VALIDATION_ERR","setIsReviewing","SET_IS_REVIEWING","setIsSubmitting","SET_IS_SUBMITTING","setSubmissionErr","SET_SUBMISSION_ERR","setPaymentData","data","SET_PAYMENT_DATA","setIsFocused","SET_IS_FOCUSED","setFooterDisplay","SET_FOOTER_DISPLAY","setIsCurrentBlockSafeToSwipe","SET_IS_CURRENT_BLOCK_SAFE_TO_SWIPE"],"sources":["@quillforms/renderer-core/src/store/actions.ts"],"sourcesContent":["import {\r\n\tSET_SWIPER_STATE,\r\n\tGO_NEXT,\r\n\tGO_PREV,\r\n\tCOMPLETE_FORM,\r\n\tGO_TO_BLOCK,\r\n\tSET_SUBMISSION_ERR,\r\n\tSET_IS_REVIEWING,\r\n\tSET_IS_SUBMITTING,\r\n\tSET_PAYMENT_DATA,\r\n\tSET_FIELD_ANSWER,\r\n\tSET_IS_FIELD_ANSWERED,\r\n\tSET_IS_FIELD_PENDING,\r\n\tSET_FIELD_PENDING_MSG,\r\n\tSET_IS_FIELD_VALID,\r\n\tINSERT_EMPTY_FIELD_ANSWER,\r\n\tSET_FIELD_VALIDATION_ERR,\r\n\tRESET_ANSWERS,\r\n\tSET_IS_FOCUSED,\r\n\tSET_FOOTER_DISPLAY,\r\n\tSET_IS_CURRENT_BLOCK_SAFE_TO_SWIPE,\r\n} from './constants';\r\n\r\nimport type {\r\n\tSwiperState,\r\n\tSwiperActionTypes,\r\n\tRendererAnswersActionTypes,\r\n\tSubmitActionTypes,\r\n} from './types';\r\n\r\n/**\r\n \r\n * Returns an action object used in setting swiper state\r\n *\r\n * @param {SwiperState} swiperState New swiper state.\r\n *\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const setSwiper = (\r\n\tswiperState: Partial< SwiperState >\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_SWIPER_STATE,\r\n\t\tswiperState,\r\n\t};\r\n};\r\n\r\n/**\r\n * Go to next block\r\n *\r\n * @param {boolean} isSwiping Is swiping\r\n *\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const goNext = ( isSwiping: boolean = false ): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: GO_NEXT,\r\n\t\tisSwiping,\r\n\t};\r\n};\r\n\r\n/**\r\n * Go to previous block\r\n *\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const goPrev = (): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: GO_PREV,\r\n\t};\r\n};\r\n\r\n/**\r\n * Go to a specific field\r\n *\r\n * @param {string} id               The field id.\r\n *\r\n * @param          forceUpdateState\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const goToBlock = (\r\n\tid: string,\r\n\tforceUpdateState = false\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: GO_TO_BLOCK,\r\n\t\tid,\r\n\t\tforceUpdateState,\r\n\t};\r\n};\r\n\r\n/**\r\n * Complete form and show thank you screen\r\n *\r\n * @return {SwiperActionTypes} Action object\r\n */\r\nexport const completeForm = (): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: COMPLETE_FORM,\r\n\t};\r\n};\r\n\r\n/**\r\n * Reset answers\r\n *\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const resetAnswers = (): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: RESET_ANSWERS,\r\n\t};\r\n};\r\n/**\r\n * Returns an action object used in inserting empty field answer.\r\n *\r\n * @param {string} id        Field uuid.\r\n * @param {string} type      Field type\r\n *\r\n * @param          blockName\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const insertEmptyFieldAnswer = (\r\n\tid: string,\r\n\tblockName: string\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: INSERT_EMPTY_FIELD_ANSWER,\r\n\t\tid,\r\n\t\tblockName,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting field answer.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {unknown} val Field value could be string, array, number or any type.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setFieldAnswer = (\r\n\tid: string,\r\n\tval: unknown\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_FIELD_ANSWER,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting field valid flag.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {boolean} val Field isValid flag.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setIsFieldValid = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_VALID,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting fields answered flag.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {boolean} val Field isAnswered flag.\r\n *\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const setIsFieldAnswered = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_ANSWERED,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting fields pending flag.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {boolean} val Field isPending flag.\r\n *\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const setIsFieldPending = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_PENDING,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns and object used in setting pending message key\r\n *\r\n * @param {string} id  Field uuid.\r\n * @param {string} val Field pendingMsg flag.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setFieldPendingMsg = (\r\n\tid: string,\r\n\tval: string\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_FIELD_PENDING_MSG,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns and object used in setting error message key\r\n *\r\n * @param {string} id  Field uuid.\r\n * @param {string} val Field isAnswered flag.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setFieldValidationErr = (\r\n\tid: string,\r\n\tval: string\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_FIELD_VALIDATION_ERR,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set is reviewing flag\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsReviewing = ( val: boolean ): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_REVIEWING,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set is submitting flag.\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsSubmitting = ( val: boolean ): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_SUBMITTING,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set submission errors.\r\n *\r\n * @param {string} val The new submission errors.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setSubmissionErr = ( val: string ): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_SUBMISSION_ERR,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set payment data\r\n *\r\n * @param  data\r\n * @return {SwiperActionTypes} Action object\r\n */\r\nexport const setPaymentData = ( data: any ): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_PAYMENT_DATA,\r\n\t\tdata,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set isFocused flag\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsFocused = ( val: boolean ) => {\r\n\treturn {\r\n\t\ttype: SET_IS_FOCUSED,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set footerDisplay flag\r\n * This flag will alomst be needed to control in touch screens.\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setFooterDisplay = ( val: boolean ) => {\r\n\treturn {\r\n\t\ttype: SET_FOOTER_DISPLAY,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set isCurrentBlockSafeToSwipe flag\r\n * This flag should control going to the next block.\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsCurrentBlockSafeToSwipe = ( val: boolean ) => {\r\n\treturn {\r\n\t\ttype: SET_IS_CURRENT_BLOCK_SAFE_TO_SWIPE,\r\n\t\tval,\r\n\t};\r\n};\r\n"],"mappings":"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"}