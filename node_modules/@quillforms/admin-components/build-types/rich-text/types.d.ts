import type { IconRenderer } from '@quillforms/types';
import { Element } from 'slate';
import { BaseEditor } from 'slate';
export declare type CustomEditor = BaseEditor;
export declare type CustomElement = {
    children: CustomNode[];
    [key: string]: any;
};
export declare type CustomText = {
    text: string;
    [key: string]: any;
};
export declare type CustomNode = CustomElement | CustomText;
export declare type CustomDescendent = {
    children: CustomNode[];
};
declare module 'slate' {
    interface CustomTypes {
        Editor: CustomEditor;
        Element: CustomElement;
        Text: CustomText;
        Descendent: CustomDescendent;
    }
}
export declare type MergeTagsSections = {
    key: string;
    label: string;
}[];
export declare type MergeTag = {
    type: string;
    modifier: string;
    label?: string;
    icon?: IconRenderer;
    color?: string;
};
export interface Link extends Element {
    url: string;
}
export declare type MergeTags = MergeTag[];
declare type allowedFormat = 'bold' | 'italic' | 'link';
export declare type allowedFormats = allowedFormat[];
export {};
//# sourceMappingURL=types.d.ts.map