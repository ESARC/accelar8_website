{"version":3,"names":["Transforms","Editor","Range","isUrl","isLinkActive","editor","link","nodes","match","n","type","unwrapLink","unwrapNodes","wrapLink","url","selection","isCollapsed","children","text","insertNodes","wrapNodes","split","collapse","edge","withLinks","insertData","insertText","isInline","element","data","getData"],"sources":["@quillforms/admin-components/src/rich-text/plugins/with-links.ts"],"sourcesContent":["import { Transforms, Editor, Range } from 'slate';\r\nimport isUrl from 'is-url';\r\nimport { CustomEditor, CustomNode } from '../types';\r\n\r\nconst isLinkActive = ( editor ) => {\r\n\tconst [ link ] = Editor.nodes( editor, {\r\n\t\tmatch: ( n: CustomNode ) => n.type === 'link',\r\n\t} );\r\n\treturn !! link;\r\n};\r\n\r\nconst unwrapLink = ( editor: CustomEditor ) => {\r\n\tTransforms.unwrapNodes( editor, {\r\n\t\tmatch: ( n: CustomNode ) => n.type === 'link',\r\n\t} );\r\n};\r\n\r\nconst wrapLink = ( editor, url: string ) => {\r\n\tif ( isLinkActive( editor ) ) {\r\n\t\tunwrapLink( editor );\r\n\t}\r\n\r\n\tconst { selection } = editor;\r\n\tconst isCollapsed = selection && Range.isCollapsed( selection );\r\n\tconst link = {\r\n\t\ttype: 'link',\r\n\t\turl,\r\n\t\tchildren: isCollapsed ? [ { text: url } ] : [],\r\n\t};\r\n\r\n\tif ( isCollapsed ) {\r\n\t\tTransforms.insertNodes( editor, link );\r\n\t} else {\r\n\t\tTransforms.wrapNodes( editor, link, { split: true } );\r\n\t\tTransforms.collapse( editor, { edge: 'end' } );\r\n\t}\r\n};\r\n\r\nexport const withLinks = ( editor ) => {\r\n\tconst { insertData, insertText, isInline } = editor;\r\n\r\n\teditor.isInline = ( element ) => {\r\n\t\treturn element.type === 'link' ? true : isInline( element );\r\n\t};\r\n\r\n\teditor.insertText = ( text ) => {\r\n\t\tif ( text && isUrl( text ) ) {\r\n\t\t\twrapLink( editor, text );\r\n\t\t} else {\r\n\t\t\tinsertText( text );\r\n\t\t}\r\n\t};\r\n\r\n\teditor.insertData = ( data ) => {\r\n\t\tconst text = data.getData( 'text/plain' );\r\n\r\n\t\tif ( text && isUrl( text ) ) {\r\n\t\t\twrapLink( editor, text );\r\n\t\t} else {\r\n\t\t\tinsertData( data );\r\n\t\t}\r\n\t};\r\n\r\n\treturn editor;\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,OAAO;AACjD,OAAOC,KAAK,MAAM,QAAQ;AAG1B,MAAMC,YAAY,GAAKC,MAAM,IAAM;EAClC,MAAM,CAAEC,IAAI,CAAE,GAAGL,MAAM,CAACM,KAAK,CAAEF,MAAM,EAAE;IACtCG,KAAK,EAAIC,CAAa,IAAMA,CAAC,CAACC,IAAI,KAAK;EACxC,CAAC,CAAE;EACH,OAAO,CAAC,CAAEJ,IAAI;AACf,CAAC;AAED,MAAMK,UAAU,GAAKN,MAAoB,IAAM;EAC9CL,UAAU,CAACY,WAAW,CAAEP,MAAM,EAAE;IAC/BG,KAAK,EAAIC,CAAa,IAAMA,CAAC,CAACC,IAAI,KAAK;EACxC,CAAC,CAAE;AACJ,CAAC;AAED,MAAMG,QAAQ,GAAGA,CAAER,MAAM,EAAES,GAAW,KAAM;EAC3C,IAAKV,YAAY,CAAEC,MAAM,CAAE,EAAG;IAC7BM,UAAU,CAAEN,MAAM,CAAE;EACrB;EAEA,MAAM;IAAEU;EAAU,CAAC,GAAGV,MAAM;EAC5B,MAAMW,WAAW,GAAGD,SAAS,IAAIb,KAAK,CAACc,WAAW,CAAED,SAAS,CAAE;EAC/D,MAAMT,IAAI,GAAG;IACZI,IAAI,EAAE,MAAM;IACZI,GAAG;IACHG,QAAQ,EAAED,WAAW,GAAG,CAAE;MAAEE,IAAI,EAAEJ;IAAI,CAAC,CAAE,GAAG;EAC7C,CAAC;EAED,IAAKE,WAAW,EAAG;IAClBhB,UAAU,CAACmB,WAAW,CAAEd,MAAM,EAAEC,IAAI,CAAE;EACvC,CAAC,MAAM;IACNN,UAAU,CAACoB,SAAS,CAAEf,MAAM,EAAEC,IAAI,EAAE;MAAEe,KAAK,EAAE;IAAK,CAAC,CAAE;IACrDrB,UAAU,CAACsB,QAAQ,CAAEjB,MAAM,EAAE;MAAEkB,IAAI,EAAE;IAAM,CAAC,CAAE;EAC/C;AACD,CAAC;AAED,OAAO,MAAMC,SAAS,GAAKnB,MAAM,IAAM;EACtC,MAAM;IAAEoB,UAAU;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGtB,MAAM;EAEnDA,MAAM,CAACsB,QAAQ,GAAKC,OAAO,IAAM;IAChC,OAAOA,OAAO,CAAClB,IAAI,KAAK,MAAM,GAAG,IAAI,GAAGiB,QAAQ,CAAEC,OAAO,CAAE;EAC5D,CAAC;EAEDvB,MAAM,CAACqB,UAAU,GAAKR,IAAI,IAAM;IAC/B,IAAKA,IAAI,IAAIf,KAAK,CAAEe,IAAI,CAAE,EAAG;MAC5BL,QAAQ,CAAER,MAAM,EAAEa,IAAI,CAAE;IACzB,CAAC,MAAM;MACNQ,UAAU,CAAER,IAAI,CAAE;IACnB;EACD,CAAC;EAEDb,MAAM,CAACoB,UAAU,GAAKI,IAAI,IAAM;IAC/B,MAAMX,IAAI,GAAGW,IAAI,CAACC,OAAO,CAAE,YAAY,CAAE;IAEzC,IAAKZ,IAAI,IAAIf,KAAK,CAAEe,IAAI,CAAE,EAAG;MAC5BL,QAAQ,CAAER,MAAM,EAAEa,IAAI,CAAE;IACzB,CAAC,MAAM;MACNO,UAAU,CAAEI,IAAI,CAAE;IACnB;EACD,CAAC;EAED,OAAOxB,MAAM;AACd,CAAC"}