{"version":3,"names":["RichTextControl","Button","Icon","closeSmall","useComboboxControlContext","RichText","_ref","_value$value","allowedFormats","id","options","value","onChange","isToggleEnabled","placeholder","tags","option","isMergeTag","push","type","modifier","label","icon","iconBox","color","createElement","className","onClick","setValue","$value","mergeTags"],"sources":["@quillforms/admin-components/src/combobox-control/rich-text/index.tsx"],"sourcesContent":["/**\r\n * QuillForms Dependencies\r\n */\r\nimport {\r\n\tallowedFormats as allowedFormatsType,\r\n\tMergeTags,\r\n\tRichTextControl,\r\n} from '../../rich-text';\r\nimport Button from '../../button';\r\n\r\n/**\r\n * WordPress Dependencies\r\n */\r\nimport { Icon } from '@wordpress/components';\r\nimport { closeSmall } from '@wordpress/icons';\r\n\r\n/**\r\n * External Dependencies\r\n */\r\n\r\n/**\r\n * Internal Dependencies\r\n */\r\nimport { useComboboxControlContext } from '../context';\r\n\r\ninterface Props {\r\n\tallowedFormats?: allowedFormatsType;\r\n}\r\n\r\nconst RichText: React.FC< Props > = ( { allowedFormats } ) => {\r\n\tconst { id, options, value, onChange, isToggleEnabled, placeholder } =\r\n\t\tuseComboboxControlContext();\r\n\r\n\tconst tags: MergeTags = [];\r\n\tfor ( const option of options ) {\r\n\t\tif ( option.isMergeTag ) {\r\n\t\t\ttags.push( {\r\n\t\t\t\ttype: option.type,\r\n\t\t\t\tmodifier: option.value,\r\n\t\t\t\tlabel: option.label,\r\n\t\t\t\ticon: option.iconBox?.icon,\r\n\t\t\t\tcolor: option.iconBox?.color,\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"combobox-control-rich-text\">\r\n\t\t\t{ isToggleEnabled && (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"combobox-control-rich-text-back\"\r\n\t\t\t\t\tonClick={ () => onChange( {} ) }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Icon icon={ closeSmall } />\r\n\t\t\t\t</Button>\r\n\t\t\t) }\r\n\t\t\t<RichTextControl\r\n\t\t\t\tid={ id }\r\n\t\t\t\tvalue={ value.value ?? '' }\r\n\t\t\t\tsetValue={ ( $value ) =>\r\n\t\t\t\t\tonChange( { type: 'text', value: $value } )\r\n\t\t\t\t}\r\n\t\t\t\tmergeTags={ tags }\r\n\t\t\t\tallowedFormats={ allowedFormats }\r\n\t\t\t\tplaceholder={ placeholder }\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RichText;\r\n"],"mappings":";AAAA;AACA;AACA;AACA,SAGCA,eAAe,QACT,iBAAiB;AACxB,OAAOC,MAAM,MAAM,cAAc;;AAEjC;AACA;AACA;AACA,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;AACA,SAASC,yBAAyB,QAAQ,YAAY;AAMtD,MAAMC,QAA2B,GAAGC,IAAA,IAA0B;EAAA,IAAAC,YAAA;EAAA,IAAxB;IAAEC;EAAe,CAAC,GAAAF,IAAA;EACvD,MAAM;IAAEG,EAAE;IAAEC,OAAO;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,eAAe;IAAEC;EAAY,CAAC,GACnEV,yBAAyB,EAAE;EAE5B,MAAMW,IAAe,GAAG,EAAE;EAC1B,KAAM,MAAMC,MAAM,IAAIN,OAAO,EAAG;IAC/B,IAAKM,MAAM,CAACC,UAAU,EAAG;MACxBF,IAAI,CAACG,IAAI,CAAE;QACVC,IAAI,EAAEH,MAAM,CAACG,IAAI;QACjBC,QAAQ,EAAEJ,MAAM,CAACL,KAAK;QACtBU,KAAK,EAAEL,MAAM,CAACK,KAAK;QACnBC,IAAI,EAAEN,MAAM,CAACO,OAAO,EAAED,IAAI;QAC1BE,KAAK,EAAER,MAAM,CAACO,OAAO,EAAEC;MACxB,CAAC,CAAE;IACJ;EACD;EAEA,OACCC,aAAA;IAAKC,SAAS,EAAC;EAA4B,GACxCb,eAAe,IAChBY,aAAA,CAACxB,MAAM;IACNyB,SAAS,EAAC,iCAAiC;IAC3CC,OAAO,EAAGA,CAAA,KAAMf,QAAQ,CAAE,CAAC,CAAC;EAAI,GAEhCa,aAAA,CAACvB,IAAI;IAACoB,IAAI,EAAGnB;EAAY,EAAG,CAE7B,EACDsB,aAAA,CAACzB,eAAe;IACfS,EAAE,EAAGA,EAAI;IACTE,KAAK,GAAAJ,YAAA,GAAGI,KAAK,CAACA,KAAK,cAAAJ,YAAA,cAAAA,YAAA,GAAI,EAAI;IAC3BqB,QAAQ,EAAKC,MAAM,IAClBjB,QAAQ,CAAE;MAAEO,IAAI,EAAE,MAAM;MAAER,KAAK,EAAEkB;IAAO,CAAC,CACzC;IACDC,SAAS,EAAGf,IAAM;IAClBP,cAAc,EAAGA,cAAgB;IACjCM,WAAW,EAAGA;EAAa,EAC1B,CACG;AAER,CAAC;AAED,eAAeT,QAAQ"}