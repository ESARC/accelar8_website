{"version":3,"names":["_slateHyperscript","require","_slate","_autop","_createEditor","_interopRequireDefault","deserializeHTML","htmlString","normalize","deserialize","DOMParser","parseFromString","formatBeforeDeserializing","autop","body","val","editor","createEditor","children","Editor","force","value","$value","replace","el","TEXT_TAGS","EM","italic","I","STRONG","bold","ELEMENT_TAGS","P","type","MERGETAG","data","dataset","modifier","text","underline","A","url","getAttribute","nodeType","Node","TEXT_NODE","textContent","undefined","nodeName","parent","Array","from","childNodes","map","flat","descendants","length","jsx","attrs","child","_default","exports","default"],"sources":["@quillforms/admin-components/src/rich-text/html-deserialize.ts"],"sourcesContent":["/**\r\n * External Dependencies\r\n */\r\nimport { jsx } from 'slate-hyperscript';\r\nimport { Editor, Node as SlateNode, Descendant, Text } from 'slate';\r\nimport { autop } from '@wordpress/autop';\r\n\r\n/**\r\n * Internal Dependencies\r\n */\r\nimport createEditor from './create-editor';\r\nimport { MergeTag } from './types';\r\n\r\nconst deserializeHTML = ( htmlString: string ): SlateNode[] => {\r\n\treturn normalize(\r\n\t\tdeserialize(\r\n\t\t\tnew DOMParser().parseFromString(\r\n\t\t\t\tformatBeforeDeserializing( autop( htmlString ) ),\r\n\t\t\t\t'text/html'\r\n\t\t\t).body\r\n\t\t)\r\n\t);\r\n};\r\n\r\n// Normalize to fix invalid JSON that may result from deserializing\r\n// This custom normalizer should be called one time only after the component mounting\r\nconst normalize = ( val: SlateNode[] ): SlateNode[] => {\r\n\t// Create temp editor for normalizing\r\n\tconst editor = createEditor();\r\n\teditor.children = val;\r\n\tEditor.normalize( editor, { force: true } );\r\n\treturn editor.children;\r\n};\r\n\r\nconst formatBeforeDeserializing = ( value: string ): string => {\r\n\tif ( ! value ) {\r\n\t\treturn '<p></p>';\r\n\t}\r\n\tconst $value = value.replace(\r\n\t\t/{{([a-zA-Z0-9-_]+):([a-zA-Z0-9-_]+)}}/g,\r\n\t\t\"<mergetag data-type='$1' data-modifier='$2'>_____</mergetag>\"\r\n\t);\r\n\treturn $value;\r\n};\r\n\r\nconst deserialize = ( el: HTMLElement | ChildNode ) => {\r\n\tconst TEXT_TAGS = {\r\n\t\t// CODE: () => ({ code: true }),\r\n\t\t// DEL: () => ({ strikethrough: true }),\r\n\t\tEM: () => ( { italic: true } ),\r\n\t\tI: () => ( { italic: true } ),\r\n\t\t// S: () => ({ strikethrough: true }),\r\n\t\tSTRONG: () => ( { bold: true } ),\r\n\t};\r\n\tconst ELEMENT_TAGS = {\r\n\t\tP: () => ( { type: 'paragraph' } ),\r\n\t\tMERGETAG: () => ( {\r\n\t\t\ttype: 'mergeTag',\r\n\t\t\tdata: {\r\n\t\t\t\ttype: ( ( el as HTMLElement ).dataset as MergeTag ).type,\r\n\t\t\t\tmodifier: ( ( el as HTMLElement ).dataset as MergeTag )\r\n\t\t\t\t\t.modifier,\r\n\t\t\t},\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: '',\r\n\t\t\t\t\tbold: false,\r\n\t\t\t\t\titalic: false,\r\n\t\t\t\t\tunderline: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t} ),\r\n\t\tA: () => ( {\r\n\t\t\ttype: 'link',\r\n\t\t\turl: ( el as HTMLElement ).getAttribute( 'href' ),\r\n\t\t} ),\r\n\r\n\t\t// H1: () => ({ type: \"heading-one\" }),\r\n\t\t// H2: () => ({ type: \"heading-two\" }),\r\n\t\t// BLOCKQUOTE: () => ({ type: \"quote\" }),\r\n\t\t// LI: () => ({ type: \"list-item\" }),\r\n\t\t// OL: () => ({ type: \"numbered-list\" }),\r\n\t\t// UL: () => ({ type: \"bulleted-list\" }),\r\n\t\t// IMG: el => ({ type: \"image\", url: el.getAttribute(\"src\") })\r\n\t};\r\n\r\n\tif ( el.nodeType === Node.TEXT_NODE ) {\r\n\t\tif ( el.textContent !== '\\n' ) {\r\n\t\t\treturn el.textContent;\r\n\t\t}\r\n\t}\r\n\tif ( el.nodeType !== 1 ) {\r\n\t\treturn undefined;\r\n\t}\r\n\tif ( el.nodeName === 'BR' ) {\r\n\t\treturn '\\n';\r\n\t}\r\n\r\n\tconst { nodeName } = el;\r\n\tlet parent = el;\r\n\r\n\t// if (\r\n\t// \tnodeName === 'PRE' &&\r\n\t// \tel.childNodes[ 0 ] &&\r\n\t// \tel.childNodes[ 0 ].nodeName === 'CODE'\r\n\t// ) {\r\n\t// \t[ parent ] = el.childNodes;\r\n\t// }\r\n\r\n\tconst children = Array.from( parent.childNodes ).map( deserialize ).flat();\r\n\r\n\tlet descendants = children as Descendant[];\r\n\tif ( ! descendants.length ) {\r\n\t\tdescendants = [ { text: '' } ];\r\n\t}\r\n\r\n\tif ( el.nodeName === 'BODY' ) {\r\n\t\treturn jsx( 'fragment', descendants );\r\n\t}\r\n\r\n\tif ( ELEMENT_TAGS[ nodeName ] ) {\r\n\t\tconst attrs = ELEMENT_TAGS[ nodeName ]( el );\r\n\r\n\t\treturn jsx( 'element', { ...attrs }, descendants );\r\n\t}\r\n\r\n\tif ( TEXT_TAGS[ nodeName ] ) {\r\n\t\tconst attrs = TEXT_TAGS[ nodeName ]( el );\r\n\t\treturn children.map( ( child: Descendant ): void | Text => {\r\n\t\t\t// This condition is to prevent throwing error when we have a string like this: <strong> {{type:modifier}} </strong>\r\n\t\t\tif ( child.type !== 'mergeTag' ) {\r\n\t\t\t\treturn jsx( 'text', { ...attrs }, child );\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\treturn children;\r\n};\r\n\r\nexport default deserializeHTML;\r\n"],"mappings":"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"}