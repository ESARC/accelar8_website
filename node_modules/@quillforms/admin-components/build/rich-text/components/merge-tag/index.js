"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _element = require("@wordpress/element");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = require("react");
var _components = require("@wordpress/components");
var _icons = require("@wordpress/icons");
var _slate = require("slate");
var _classnames = _interopRequireDefault(require("classnames"));
var _emotion = require("emotion");
var _getPlainExcerpt = _interopRequireDefault(require("../../get-plain-excerpt"));
/**
 * QuillForms Dependencies
 */

/**
 * WordPress Dependencies
 */

// @ts-expect-error

/**
 * External Dependencies
 */

/**
 * Internal Dependencies
 */

const EditorMergeTag = _ref => {
  let {
    attributes,
    editor,
    children,
    path,
    element,
    mergeTags
  } = _ref;
  const {
    type,
    modifier
  } = element.data;
  const [node] = _slate.Editor.node(editor, path);
  const mergeTag = mergeTags.find(a => a.type === type && a.modifier === modifier);
  const mergeTagIcon = mergeTag?.icon ? mergeTag.icon : _icons.plus;
  const renderedIcon = (0, _element.createElement)(_components.Icon, {
    icon: mergeTagIcon?.src ? mergeTagIcon?.src
    // @ts-expect-error
    : mergeTagIcon
  });
  (0, _react.useEffect)(() => {
    if (!mergeTag) {
      editor.apply({
        type: 'remove_node',
        path,
        node
      });
      _slate.Transforms.insertNodes(editor, {
        text: `{{${type}:${modifier}}}`
      }, {
        at: path
      });
    }
  }, []);
  return (0, _element.createElement)(_element.Fragment, null, mergeTag && (0, _element.createElement)("span", (0, _extends2.default)({}, attributes, {
    contentEditable: false,
    className: (0, _classnames.default)('rich-text-merge-tag__node-wrapper', (0, _emotion.css)`
							color: ${mergeTag?.color ? mergeTag.color : '#bb426f'};
							bordercolor: ${mergeTag?.color ? mergeTag.color : '#bb426f'};
							fill: ${mergeTag?.color ? mergeTag.color : '#bb426f'};
						`)
  }), (0, _element.createElement)("span", {
    className: (0, _classnames.default)('rich-text-merge-tag__background', (0, _emotion.css)`
								background: ${mergeTag?.color ? mergeTag.color : '#bb426f'};
							`)
  }), (0, _element.createElement)("span", {
    className: "rich-text-merge-tag__icon-box"
  }, renderedIcon), (0, _element.createElement)("span", {
    className: "rich-text-merge-tag__title",
    dangerouslySetInnerHTML: {
      __html: (0, _getPlainExcerpt.default)(mergeTag.label)
    }
  }), (0, _element.createElement)("button", {
    className: "rich-text-merge-tag__delete",
    onClick: () => {
      setTimeout(() => {
        editor.apply({
          type: 'remove_node',
          path,
          node
        });
      }, 0);
    }
  }, (0, _element.createElement)(_components.Icon, {
    icon: _icons.close
  })), children));
};
var _default = EditorMergeTag;
exports.default = _default;
//# sourceMappingURL=index.js.map