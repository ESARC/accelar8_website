"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _element = require("@wordpress/element");
var _slate = require("slate");
var _button = _interopRequireDefault(require("../button"));
var _linkIcon = _interopRequireDefault(require("./link-icon"));
/**
 * External Dependencies
 */

/**
 * Inernal Dependencies
 */

const Link = _ref => {
  let {
    editor
  } = _ref;
  const insertLink = url => {
    if (editor.selection) {
      wrapLink(url);
    }
  };
  const isLinkActive = () => {
    const [link] = _slate.Editor.nodes(editor, {
      match: n => n.type === 'link'
    });
    return !!link;
  };
  const unwrapLink = () => {
    _slate.Transforms.unwrapNodes(editor, {
      match: n => n.type === 'link'
    });
  };
  const wrapLink = url => {
    if (isLinkActive()) {
      unwrapLink();
    }
    const {
      selection
    } = editor;
    const isCollapsed = selection && _slate.Range.isCollapsed(selection);
    const link = {
      type: 'link',
      url,
      children: isCollapsed ? [{
        text: url
      }] : []
    };
    if (isCollapsed) {
      _slate.Transforms.insertNodes(editor, link);
    } else {
      _slate.Transforms.wrapNodes(editor, link, {
        split: true
      });
      _slate.Transforms.collapse(editor, {
        edge: 'end'
      });
    }
  };
  return (0, _element.createElement)(_button.default, {
    active: isLinkActive(),
    onMouseDown: event => {
      event.preventDefault();
      if (isLinkActive()) {
        unwrapLink();
        return;
      }
      // eslint-disable-next-line no-alert
      const url = window.prompt('Enter the URL of the link:');
      if (!url) return;
      insertLink(url);
    }
  }, (0, _element.createElement)(_linkIcon.default, null));
};
var _default = Link;
exports.default = _default;
//# sourceMappingURL=index.js.map