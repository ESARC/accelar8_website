{"version":3,"names":["_hooks","require","_react","_context","_richText","_interopRequireDefault","_select","_useFields","_useHiddenFields","_useVariables","ComboboxControl","_ref","id","value","onChange","isToggleEnabled","customize","placeholder","hideChooseOption","selectFirstOption","excerptLength","allowedFormats","fields","useFields","section","variables","useVariables","hidden_fields","useHiddenFields","sections","options","length","push","key","label","concat","EntryProperties","map","property","type","isMergeTag","filtered","applyFilters","customized","useEffect","_element","createElement","className","ComboboxControlContextProvider","default","_default","exports"],"sources":["@quillforms/admin-components/src/combobox-control/index.tsx"],"sourcesContent":["/**\r\n * QuillForms Dependencies\r\n */\r\nimport { IconRenderer } from '@quillforms/types';\r\n\r\n/**\r\n * WordPress Dependencies\r\n */\r\nimport { applyFilters } from '@wordpress/hooks';\r\nimport { useEffect } from 'react';\r\nimport { allowedFormats } from '../rich-text';\r\n\r\n/**\r\n * Internal Dependencies\r\n */\r\nimport { ComboboxControlContextProvider } from './context';\r\nimport RichText from './rich-text';\r\nimport Select from './select';\r\nimport useFields from './use-fields';\r\nimport useHiddenFields from './use-hidden-fields';\r\nimport useVariables from './use-variables';\r\n\r\nexport type Sections = { key: string; label: string }[];\r\nexport type Options = {\r\n\ttype: string;\r\n\tvalue: string;\r\n\tlabel: string;\r\n\ticonBox?: {\r\n\t\ticon?: IconRenderer;\r\n\t\tcolor?: string;\r\n\t};\r\n\t// section must exist if defined.\r\n\tsection?: string;\r\n\t// will the option be included in rich text editor merge tags?\r\n\tisMergeTag?: boolean;\r\n\t// can hold other data for filters like block name.\r\n\tother?: {\r\n\t\t[ x: string ]: any;\r\n\t};\r\n}[];\r\nexport type ComboboxControlValue = {\r\n\ttype?: string;\r\n\tvalue?: string;\r\n};\r\nexport type CustomizeObject = {\r\n\tsections: Sections;\r\n\toptions: Options;\r\n};\r\nexport type CustomizeFunction = ( value: CustomizeObject ) => CustomizeObject;\r\n\r\nexport type ComboboxControlProps = {\r\n\tid?: string;\r\n\t// if type is text, the component will load rich text editor. else the component will load the select.\r\n\tvalue: ComboboxControlValue;\r\n\tonChange: ( value: ComboboxControlValue ) => void;\r\n\t// if true, select component will have custom value option that loads rich text\r\n\t// and rich text editor will have back/exit button to loads select. (default true)\r\n\tisToggleEnabled?: boolean;\r\n\t// customize sections and options.\r\n\tcustomize?: CustomizeFunction;\r\n\t// rich text editor placeholder or select \"choose\" option text.\r\n\tplaceholder?: string;\r\n\t// hide \"choose an option\". (select)\r\n\thideChooseOption?: boolean;\r\n\t// select first option on load if value is empty. calls onChange. (select)\r\n\tselectFirstOption?: boolean;\r\n\t// Excerpt length\r\n\texcerptLength?: number;\r\n\t// allowed formats (rich text).\r\n\tallowedFormats?: allowedFormats;\r\n};\r\n\r\nconst ComboboxControl: React.FC< ComboboxControlProps > = ( {\r\n\tid,\r\n\tvalue,\r\n\tonChange,\r\n\tisToggleEnabled = true,\r\n\tcustomize,\r\n\tplaceholder,\r\n\thideChooseOption,\r\n\tselectFirstOption,\r\n\texcerptLength = 30,\r\n\tallowedFormats,\r\n} ) => {\r\n\tconst fields = useFields( { section: 'fields' } );\r\n\tconst variables = useVariables( { section: 'variables' } );\r\n\tconst hidden_fields = useHiddenFields( { section: 'hidden_fields' } );\r\n\r\n\tlet sections: Sections = [];\r\n\tlet options: Options = [];\r\n\r\n\t// fields\r\n\tif ( fields.length ) {\r\n\t\tsections.push( {\r\n\t\t\tkey: 'fields',\r\n\t\t\tlabel: 'Fields',\r\n\t\t} );\r\n\t\toptions = options.concat( fields );\r\n\t}\r\n\t// variables\r\n\tif ( variables.length ) {\r\n\t\tsections.push( {\r\n\t\t\tkey: 'variables',\r\n\t\t\tlabel: 'Variables',\r\n\t\t} );\r\n\t\toptions = options.concat( variables );\r\n\t}\r\n\t// hidden_fields\r\n\tif ( hidden_fields.length ) {\r\n\t\tsections.push( {\r\n\t\t\tkey: 'hidden_fields',\r\n\t\t\tlabel: 'Hidden Fields',\r\n\t\t} );\r\n\t\toptions = options.concat( hidden_fields );\r\n\t}\r\n\t// entry properties\r\n\tconst EntryProperties = [\r\n\t\t{\r\n\t\t\tvalue: 'id',\r\n\t\t\tlabel: 'Entry ID',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'form_id',\r\n\t\t\tlabel: 'Form ID',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'date_created',\r\n\t\t\tlabel: 'Entry Date (YYYY-MM-DD)',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'user_id',\r\n\t\t\tlabel: 'User ID',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'user_ip',\r\n\t\t\tlabel: 'User IP Address',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'user_agent',\r\n\t\t\tlabel: 'HTTP User Agent',\r\n\t\t},\r\n\t];\r\n\tsections.push( {\r\n\t\tkey: 'entry_properties',\r\n\t\tlabel: 'Entry Properties',\r\n\t} );\r\n\toptions = options.concat(\r\n\t\tEntryProperties.map( ( property ) => {\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'property',\r\n\t\t\t\tvalue: property.value,\r\n\t\t\t\tlabel: property.label,\r\n\t\t\t\tsection: 'entry_properties',\r\n\t\t\t\tisMergeTag: true,\r\n\t\t\t};\r\n\t\t} )\r\n\t);\r\n\r\n\t// apply global customize filter to sections and options.\r\n\tconst filtered = applyFilters(\r\n\t\t'QuillForms.AdminComponents.ComboboxControl.Customize',\r\n\t\t{ sections, options }\r\n\t) as CustomizeObject;\r\n\tsections = filtered.sections;\r\n\toptions = filtered.options;\r\n\r\n\t// apply local customize filter to sections and options.\r\n\tif ( customize ) {\r\n\t\tconst customized = customize( { sections, options } );\r\n\t\tsections = customized.sections;\r\n\t\toptions = customized.options;\r\n\t}\r\n\r\n\t// select first option.\r\n\tuseEffect( () => {\r\n\t\tif (\r\n\t\t\tselectFirstOption &&\r\n\t\t\t! value.type &&\r\n\t\t\t! value.value &&\r\n\t\t\toptions[ 0 ]\r\n\t\t) {\r\n\t\t\tonChange( { type: options[ 0 ].type, value: options[ 0 ].value } );\r\n\t\t}\r\n\t}, [] );\r\n\r\n\treturn (\r\n\t\t<div className=\"combobox-control\">\r\n\t\t\t<ComboboxControlContextProvider\r\n\t\t\t\tvalue={ {\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tsections,\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tonChange,\r\n\t\t\t\t\tisToggleEnabled,\r\n\t\t\t\t\tplaceholder,\r\n\t\t\t\t\texcerptLength,\r\n\t\t\t\t} }\r\n\t\t\t>\r\n\t\t\t\t{ value.type === 'text' ? (\r\n\t\t\t\t\t<RichText allowedFormats={ allowedFormats } />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Select hideChooseOption={ hideChooseOption } />\r\n\t\t\t\t) }\r\n\t\t\t</ComboboxControlContextProvider>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ComboboxControl;\r\n"],"mappings":"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"}