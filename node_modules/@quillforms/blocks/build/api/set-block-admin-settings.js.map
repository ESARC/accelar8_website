{"version":3,"names":["_data","require","_lodash","_utils","setBlockAdminSettings","name","settings","title","color","icon","order","controls","console","error","blockType","select","getBlockType","normalizeIconObject","isValidIcon","src","logicControl","isFunction","entryDetails","isNaN","getChoices","_ref","id","attributes","dispatch","pick","exports"],"sources":["@quillforms/blocks/src/api/set-block-admin-settings.ts"],"sourcesContent":["/* eslint no-console: [ 'error', { allow: [ 'error' ] } ] */\r\n/**\r\n * WordPress Dependencies\r\n */\r\nimport { dispatch, select } from '@wordpress/data';\r\n\r\n/**\r\n * External Dependencies\r\n */\r\nimport { isFunction, pick } from 'lodash';\r\n\r\n/**\r\n * Internal Dependencies\r\n */\r\nimport { isValidIcon, normalizeIconObject } from '@quillforms/utils';\r\nimport { BlockAdminSettings } from '../types';\r\n\r\n/**\r\n * Set block admin settings.\r\n * Block admin settings is the configuration for the block that should be loaded at the admin only.\r\n * We should define here the block icon, controls, color and logic control.\r\n *\r\n * @param {string}             name       Block name.\r\n * @param {BlockAdminSettings} settings   Block configuration.\r\n *\r\n */\r\nexport const setBlockAdminSettings = (\r\n\tname: string,\r\n\tsettings: BlockAdminSettings\r\n): BlockAdminSettings | void => {\r\n\tsettings = {\r\n\t\ttitle: 'Untitled',\r\n\t\tcolor: '#333s',\r\n\t\ticon: 'plus',\r\n\t\torder: 20,\r\n\t\tcontrols: () => null,\r\n\t\t...settings,\r\n\t};\r\n\r\n\tif ( typeof name !== 'string' ) {\r\n\t\tconsole.error( 'Block types must be strings.' );\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst blockType = select( 'quillForms/blocks' ).getBlockType( name );\r\n\tif ( ! blockType ) {\r\n\t\tconsole.error(\r\n\t\t\t`The ${ name } block isn't registered. Please register it first!`\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( typeof settings.color !== 'string' ) {\r\n\t\tconsole.error( 'The \"color\" property must be a valid string!' );\r\n\t}\r\n\r\n\tsettings.icon = normalizeIconObject( settings.icon );\r\n\r\n\tif ( ! isValidIcon( settings.icon.src ) ) {\r\n\t\tconsole.error( 'The \"icon\" property must be a valid function!' );\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( settings.logicControl && ! isFunction( settings.logicControl ) ) {\r\n\t\tconsole.error(\r\n\t\t\t'The \"logicControl\" property must be a valid function!'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( settings.entryDetails && ! isFunction( settings.entryDetails ) ) {\r\n\t\tconsole.error(\r\n\t\t\t'The \"entryDetails\" property must be a valid function!'\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( ! isFunction( settings.controls ) ) {\r\n\t\tconsole.error( 'The \"controls\" property must be a valid function!' );\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( settings.order && isNaN( settings.order ) ) {\r\n\t\tconsole.error( 'The \"order\" property must be a valid number!' );\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( ! isFunction( settings.getChoices ) ) {\r\n\t\t// @ts-ignore\r\n\t\tsettings.getChoices = ( { id, attributes } ) => {\r\n\t\t\treturn [];\r\n\t\t};\r\n\t}\r\n\r\n\tdispatch( 'quillForms/blocks' ).setBlockAdminSettings(\r\n\t\tpick( settings, [\r\n\t\t\t'controls',\r\n\t\t\t'entryDetails',\r\n\t\t\t'logicControl',\r\n\t\t\t'color',\r\n\t\t\t'icon',\r\n\t\t\t'title',\r\n\t\t\t'order',\r\n\t\t\t'getChoices',\r\n\t\t] ),\r\n\t\tname\r\n\t);\r\n};\r\n"],"mappings":";;;;;;AAIA,IAAAA,KAAA,GAAAC,OAAA;AAKA,IAAAC,OAAA,GAAAD,OAAA;AAKA,IAAAE,MAAA,GAAAF,OAAA;AAdA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMG,qBAAqB,GAAGA,CACpCC,IAAY,EACZC,QAA4B,KACG;EAC/BA,QAAQ,GAAG;IACVC,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAEA,CAAA,KAAM,IAAI;IACpB,GAAGL;EACJ,CAAC;EAED,IAAK,OAAOD,IAAI,KAAK,QAAQ,EAAG;IAC/BO,OAAO,CAACC,KAAK,CAAE,8BAA8B,CAAE;IAC/C;EACD;EAEA,MAAMC,SAAS,GAAG,IAAAC,YAAM,EAAE,mBAAmB,CAAE,CAACC,YAAY,CAAEX,IAAI,CAAE;EACpE,IAAK,CAAES,SAAS,EAAG;IAClBF,OAAO,CAACC,KAAK,CACX,OAAOR,IAAM,oDAAmD,CACjE;IACD;EACD;EAEA,IAAK,OAAOC,QAAQ,CAACE,KAAK,KAAK,QAAQ,EAAG;IACzCI,OAAO,CAACC,KAAK,CAAE,8CAA8C,CAAE;EAChE;EAEAP,QAAQ,CAACG,IAAI,GAAG,IAAAQ,0BAAmB,EAAEX,QAAQ,CAACG,IAAI,CAAE;EAEpD,IAAK,CAAE,IAAAS,kBAAW,EAAEZ,QAAQ,CAACG,IAAI,CAACU,GAAG,CAAE,EAAG;IACzCP,OAAO,CAACC,KAAK,CAAE,+CAA+C,CAAE;IAChE;EACD;EAEA,IAAKP,QAAQ,CAACc,YAAY,IAAI,CAAE,IAAAC,kBAAU,EAAEf,QAAQ,CAACc,YAAY,CAAE,EAAG;IACrER,OAAO,CAACC,KAAK,CACZ,uDAAuD,CACvD;IACD;EACD;EAEA,IAAKP,QAAQ,CAACgB,YAAY,IAAI,CAAE,IAAAD,kBAAU,EAAEf,QAAQ,CAACgB,YAAY,CAAE,EAAG;IACrEV,OAAO,CAACC,KAAK,CACZ,uDAAuD,CACvD;IACD;EACD;EAEA,IAAK,CAAE,IAAAQ,kBAAU,EAAEf,QAAQ,CAACK,QAAQ,CAAE,EAAG;IACxCC,OAAO,CAACC,KAAK,CAAE,mDAAmD,CAAE;IACpE;EACD;EAEA,IAAKP,QAAQ,CAACI,KAAK,IAAIa,KAAK,CAAEjB,QAAQ,CAACI,KAAK,CAAE,EAAG;IAChDE,OAAO,CAACC,KAAK,CAAE,8CAA8C,CAAE;IAC/D;EACD;EAEA,IAAK,CAAE,IAAAQ,kBAAU,EAAEf,QAAQ,CAACkB,UAAU,CAAE,EAAG;IAC1C;IACAlB,QAAQ,CAACkB,UAAU,GAAGC,IAAA,IAA0B;MAAA,IAAxB;QAAEC,EAAE;QAAEC;MAAW,CAAC,GAAAF,IAAA;MACzC,OAAO,EAAE;IACV,CAAC;EACF;EAEA,IAAAG,cAAQ,EAAE,mBAAmB,CAAE,CAACxB,qBAAqB,CACpD,IAAAyB,YAAI,EAAEvB,QAAQ,EAAE,CACf,UAAU,EACV,cAAc,EACd,cAAc,EACd,OAAO,EACP,MAAM,EACN,OAAO,EACP,OAAO,EACP,YAAY,CACZ,CAAE,EACHD,IAAI,CACJ;AACF,CAAC;AAACyB,OAAA,CAAA1B,qBAAA,GAAAA,qBAAA"}