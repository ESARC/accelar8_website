{"version":3,"names":["maxValueMonth","formatOrder","createAutoCorrectedDatePipe","dateFormat","arguments","length","undefined","minYear","maxYear","dateFormatArray","split","sort","a","b","indexOf","conformedValue","indexesOfPipedChars","maxValue","dd","mm","yy","yyyy","HH","MM","SS","minValue","conformedValueArr","forEach","format","position","maxFirstDigit","parseInt","toString","substr","push","month","isInvalid","some","textValue","replace","value","maxValueForFormat","scopedMaxValue","substring","scopedMinValue","join"],"sources":["@quillforms/blocklib-date-block/src/renderer/create-autocorrected-date-pipe.js"],"sourcesContent":["const maxValueMonth = [ 31, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst formatOrder = [ 'yyyy', 'yy', 'mm', 'dd', 'HH', 'MM', 'SS' ];\r\nexport default function createAutoCorrectedDatePipe(\r\n\tdateFormat = 'mm dd yyyy',\r\n\t{ minYear = 1, maxYear = 9999 } = {}\r\n) {\r\n\tconst dateFormatArray = dateFormat\r\n\t\t.split( /[^dmyHMS]+/ )\r\n\t\t.sort(\r\n\t\t\t( a, b ) => formatOrder.indexOf( a ) - formatOrder.indexOf( b )\r\n\t\t);\r\n\treturn function ( conformedValue ) {\r\n\t\tconst indexesOfPipedChars = [];\r\n\t\tconst maxValue = {\r\n\t\t\tdd: 31,\r\n\t\t\tmm: 12,\r\n\t\t\tyy: 99,\r\n\t\t\tyyyy: maxYear,\r\n\t\t\tHH: 23,\r\n\t\t\tMM: 59,\r\n\t\t\tSS: 59,\r\n\t\t};\r\n\t\tconst minValue = {\r\n\t\t\tdd: 1,\r\n\t\t\tmm: 1,\r\n\t\t\tyy: 0,\r\n\t\t\tyyyy: minYear,\r\n\t\t\tHH: 0,\r\n\t\t\tMM: 0,\r\n\t\t\tSS: 0,\r\n\t\t};\r\n\t\tconst conformedValueArr = conformedValue.split( '' );\r\n\r\n\t\t// Check first digit\r\n\t\tdateFormatArray.forEach( ( format ) => {\r\n\t\t\tconst position = dateFormat.indexOf( format );\r\n\t\t\tconst maxFirstDigit = parseInt(\r\n\t\t\t\tmaxValue[ format ].toString().substr( 0, 1 ),\r\n\t\t\t\t10\r\n\t\t\t);\r\n\r\n\t\t\tif (\r\n\t\t\t\tparseInt( conformedValueArr[ position ], 10 ) > maxFirstDigit\r\n\t\t\t) {\r\n\t\t\t\tconformedValueArr[ position + 1 ] =\r\n\t\t\t\t\tconformedValueArr[ position ];\r\n\t\t\t\tconformedValueArr[ position ] = 0;\r\n\t\t\t\tindexesOfPipedChars.push( position );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Check for invalid date\r\n\t\tlet month = 0;\r\n\t\tconst isInvalid = dateFormatArray.some( ( format ) => {\r\n\t\t\tconst position = dateFormat.indexOf( format );\r\n\t\t\tconst length = format.length;\r\n\t\t\tconst textValue = conformedValue\r\n\t\t\t\t.substr( position, length )\r\n\t\t\t\t.replace( /\\D/g, '' );\r\n\t\t\tconst value = parseInt( textValue, 10 );\r\n\t\t\tif ( format === 'mm' ) {\r\n\t\t\t\tmonth = value || 0;\r\n\t\t\t}\r\n\t\t\tconst maxValueForFormat =\r\n\t\t\t\tformat === 'dd' ? maxValueMonth[ month ] : maxValue[ format ];\r\n\t\t\tif ( format === 'yyyy' && ( minYear !== 1 || maxYear !== 9999 ) ) {\r\n\t\t\t\tconst scopedMaxValue = parseInt(\r\n\t\t\t\t\tmaxValue[ format ]\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t.substring( 0, textValue.length ),\r\n\t\t\t\t\t10\r\n\t\t\t\t);\r\n\t\t\t\tconst scopedMinValue = parseInt(\r\n\t\t\t\t\tminValue[ format ]\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t.substring( 0, textValue.length ),\r\n\t\t\t\t\t10\r\n\t\t\t\t);\r\n\t\t\t\treturn value < scopedMinValue || value > scopedMaxValue;\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\tvalue > maxValueForFormat ||\r\n\t\t\t\t( textValue.length === length && value < minValue[ format ] )\r\n\t\t\t);\r\n\t\t} );\r\n\r\n\t\tif ( isInvalid ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tvalue: conformedValueArr.join( '' ),\r\n\t\t\tindexesOfPipedChars,\r\n\t\t};\r\n\t};\r\n}\r\n"],"mappings":"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"}