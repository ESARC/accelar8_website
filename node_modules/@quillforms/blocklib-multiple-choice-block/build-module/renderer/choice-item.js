import { createElement } from "@wordpress/element";
/**
 * QuillForms Depndencies
 */
import { useMessages } from '@quillforms/renderer-core';

/**
 * External Dependencies
 */
import classnames from 'classnames';
import { css } from 'emotion';
import { useState } from 'react';
import tinyColor from 'tinycolor2';
const ChoiceItem = _ref => {
  let {
    order,
    selected,
    choiceLabel,
    clickHandler,
    theme
  } = _ref;
  const {
    answersColor
  } = theme;
  const messages = useMessages();
  const [isClicked, setIsClicked] = useState(false);
  return createElement("div", {
    role: "presentation",
    className: classnames('multipleChoice__optionWrapper', {
      selected,
      clicked: isClicked
    }, css`
					background: ${tinyColor(answersColor).setAlpha(0.1).toString()};

					border-color: ${answersColor};
					color: ${answersColor};

					&:hover {
						background: ${tinyColor(answersColor).setAlpha(0.2).toString()};
					}

					&.selected {
						background: ${tinyColor(answersColor).setAlpha(0.75).toString()};
						color: ${tinyColor(answersColor).isDark() ? '#fff' : '#333'};

						.multipleChoice__optionKey {
							color: ${tinyColor(answersColor).isDark() ? '#fff' : '#333'};

							border-color: ${tinyColor(answersColor).isDark() ? '#fff' : '#333'};
						}
					}
				`),
    onClick: () => {
      clickHandler();
      if (!selected) {
        setIsClicked(false);
        setTimeout(() => {
          setIsClicked(true);
        }, 0);
      }
    }
  }, createElement("span", {
    className: "multipleChoice__optionLabel"
  }, choiceLabel), createElement("span", {
    className: classnames('multipleChoice__optionKey', css`
						background: ${tinyColor(answersColor).setAlpha(0.1).toString()};
						color: ${answersColor};
						border-color: ${tinyColor(answersColor).setAlpha(0.4).toString()};
					`)
  }, createElement("span", {
    className: classnames('multipleChoice__optionKeyTip', css`
							background: ${answersColor};
							color: ${tinyColor(answersColor).isDark() ? '#fff' : '#333'};
						`)
  }, messages['label.hintText.key']), order));
};
export default ChoiceItem;
//# sourceMappingURL=choice-item.js.map