"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _element = require("@wordpress/element");
var _adminComponents = require("@quillforms/admin-components");
var _react = require("react");
/**
 * QuillForms Dependencies
 */

/**
 * WordPress Dependencies
 */

const shortTextControl = _ref => {
  let {
    attributes,
    setAttributes
  } = _ref;
  const {
    setMaxCharacters,
    maxCharacters,
    minCharacters
  } = attributes;
  return (0, _element.createElement)(_react.Fragment, null, (0, _element.createElement)(_adminComponents.BaseControl, null, (0, _element.createElement)(_adminComponents.ControlWrapper, {
    orientation: "horizontal"
  }, (0, _element.createElement)(_adminComponents.ControlLabel, {
    label: "Min Characters",
    isNew: true
  }), (0, _element.createElement)(_adminComponents.ToggleControl, {
    checked: minCharacters !== false,
    onChange: () => {
      setAttributes({
        minCharacters: minCharacters !== false ? false : 0
      });
    }
  })), minCharacters !== false && (0, _element.createElement)(_adminComponents.TextControl, {
    type: "number",
    onChange: val => {
      setAttributes({
        minCharacters: val
      });
    }
  })), (0, _element.createElement)(_adminComponents.BaseControl, null, (0, _element.createElement)(_adminComponents.ControlWrapper, {
    orientation: "horizontal"
  }, (0, _element.createElement)(_adminComponents.ControlLabel, {
    label: "Max Characters"
  }), (0, _element.createElement)(_adminComponents.ToggleControl, {
    checked: setMaxCharacters,
    onChange: () => {
      setAttributes({
        setMaxCharacters: !setMaxCharacters
      });
    }
  })), setMaxCharacters && (0, _element.createElement)(_adminComponents.TextControl, {
    type: "number",
    value: maxCharacters,
    onChange: val => setAttributes({
      maxCharacters: val
    })
  })));
};
var _default = shortTextControl;
exports.default = _default;
//# sourceMappingURL=controls.js.map