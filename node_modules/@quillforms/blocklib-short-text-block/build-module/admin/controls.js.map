{"version":3,"names":["BaseControl","ControlWrapper","ControlLabel","ToggleControl","TextControl","Fragment","shortTextControl","_ref","attributes","setAttributes","setMaxCharacters","maxCharacters","minCharacters","createElement","orientation","label","isNew","checked","onChange","type","val","value"],"sources":["@quillforms/blocklib-short-text-block/src/admin/controls.js"],"sourcesContent":["/**\r\n * QuillForms Dependencies\r\n */\r\nimport {\r\n\tBaseControl,\r\n\tControlWrapper,\r\n\tControlLabel,\r\n\tToggleControl,\r\n\tTextControl,\r\n} from '@quillforms/admin-components';\r\n\r\n/**\r\n * WordPress Dependencies\r\n */\r\nimport { Fragment } from 'react';\r\n\r\nconst shortTextControl = ( { attributes, setAttributes } ) => {\r\n\tconst { setMaxCharacters, maxCharacters, minCharacters } = attributes;\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<BaseControl>\r\n\t\t\t\t<ControlWrapper orientation=\"horizontal\">\r\n\t\t\t\t\t<ControlLabel label=\"Min Characters\" isNew />\r\n\t\t\t\t\t<ToggleControl\r\n\t\t\t\t\t\tchecked={ minCharacters !== false }\r\n\t\t\t\t\t\tonChange={ () => {\r\n\t\t\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\t\t\tminCharacters:\r\n\t\t\t\t\t\t\t\t\tminCharacters !== false ? false : 0,\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ControlWrapper>\r\n\t\t\t\t{ minCharacters !== false && (\r\n\t\t\t\t\t<TextControl\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonChange={ ( val ) => {\r\n\t\t\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\t\t\tminCharacters: val,\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t</BaseControl>\r\n\t\t\t<BaseControl>\r\n\t\t\t\t<ControlWrapper orientation=\"horizontal\">\r\n\t\t\t\t\t<ControlLabel label=\"Max Characters\" />\r\n\t\t\t\t\t<ToggleControl\r\n\t\t\t\t\t\tchecked={ setMaxCharacters }\r\n\t\t\t\t\t\tonChange={ () => {\r\n\t\t\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\t\t\tsetMaxCharacters: ! setMaxCharacters,\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ControlWrapper>\r\n\t\t\t\t{ setMaxCharacters && (\r\n\t\t\t\t\t<TextControl\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tvalue={ maxCharacters }\r\n\t\t\t\t\t\tonChange={ ( val ) =>\r\n\t\t\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\t\t\tmaxCharacters: val,\r\n\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t</BaseControl>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\nexport default shortTextControl;\r\n"],"mappings":";AAAA;AACA;AACA;AACA,SACCA,WAAW,EACXC,cAAc,EACdC,YAAY,EACZC,aAAa,EACbC,WAAW,QACL,8BAA8B;;AAErC;AACA;AACA;AACA,SAASC,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,gBAAgB,GAAGC,IAAA,IAAqC;EAAA,IAAnC;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAF,IAAA;EACvD,MAAM;IAAEG,gBAAgB;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAGJ,UAAU;EACrE,OACCK,aAAA,CAACR,QAAQ,QACRQ,aAAA,CAACb,WAAW,QACXa,aAAA,CAACZ,cAAc;IAACa,WAAW,EAAC;EAAY,GACvCD,aAAA,CAACX,YAAY;IAACa,KAAK,EAAC,gBAAgB;IAACC,KAAK;EAAA,EAAG,EAC7CH,aAAA,CAACV,aAAa;IACbc,OAAO,EAAGL,aAAa,KAAK,KAAO;IACnCM,QAAQ,EAAGA,CAAA,KAAM;MAChBT,aAAa,CAAE;QACdG,aAAa,EACZA,aAAa,KAAK,KAAK,GAAG,KAAK,GAAG;MACpC,CAAC,CAAE;IACJ;EAAG,EACF,CACc,EACfA,aAAa,KAAK,KAAK,IACxBC,aAAA,CAACT,WAAW;IACXe,IAAI,EAAC,QAAQ;IACbD,QAAQ,EAAKE,GAAG,IAAM;MACrBX,aAAa,CAAE;QACdG,aAAa,EAAEQ;MAChB,CAAC,CAAE;IACJ;EAAG,EAEJ,CACY,EACdP,aAAA,CAACb,WAAW,QACXa,aAAA,CAACZ,cAAc;IAACa,WAAW,EAAC;EAAY,GACvCD,aAAA,CAACX,YAAY;IAACa,KAAK,EAAC;EAAgB,EAAG,EACvCF,aAAA,CAACV,aAAa;IACbc,OAAO,EAAGP,gBAAkB;IAC5BQ,QAAQ,EAAGA,CAAA,KAAM;MAChBT,aAAa,CAAE;QACdC,gBAAgB,EAAE,CAAEA;MACrB,CAAC,CAAE;IACJ;EAAG,EACF,CACc,EACfA,gBAAgB,IACjBG,aAAA,CAACT,WAAW;IACXe,IAAI,EAAC,QAAQ;IACbE,KAAK,EAAGV,aAAe;IACvBO,QAAQ,EAAKE,GAAG,IACfX,aAAa,CAAE;MACdE,aAAa,EAAES;IAChB,CAAC;EACD,EAEF,CACY,CACJ;AAEb,CAAC;AACD,eAAed,gBAAgB"}